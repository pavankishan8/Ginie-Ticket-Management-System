@model TicketRaising.Data_Component.Ticket

@{
    ViewBag.Title = "ViewAssignedTicket";
}

<h2>Details of Ticket - <i>@Model.TicketNo</i></h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    
        <div class="form-group">
            @Html.LabelFor(model => model.TicketNo,"Ticket Number", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TicketNo, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.HiddenFor(model => model.TicketNo, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.TicketNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmpId,"Employee ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmpId, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.HiddenFor(model => model.EmpId, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.EmpId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SystemNo,"System Number", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SystemNo, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.HiddenFor(model => model.SystemNo, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.SystemNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RaisedTime,"Raised Time" ,htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RaisedTime, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.HiddenFor(model => model.RaisedTime, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.RaisedTime, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.ProblemStatement,"Problem Statement", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProblemStatement, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.HiddenFor(model => model.ProblemStatement, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.ProblemStatement, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProblemDescription,"Problem Description ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProblemDescription, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.HiddenFor(model => model.ProblemDescription, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.ProblemDescription, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Close Ticket" class="btn btn-danger" style="width:300px" />
            </div>
        </div>
    </div>
}

    <div>
        @Html.ActionLink("Back", "ViewAssigned", "Ticket", new { @class = "btn btn-primary" })
    </div>

